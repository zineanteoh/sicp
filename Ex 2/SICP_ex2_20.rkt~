#lang sicp

; Supporting Procedures
(define (length l)
  (if (null? l)
      0
      (+ 1 (length (cdr l)))))
(define (remove-n list n)
  (cond ((or (>= n (length list)) (< n 0)) (display "Index out of bound"))
        ((= n 0) (cdr list))
        (else (cons (car list) (remove-n (cdr list) (- n 1))))))

; Ex 2.20

(define (sameParity item1 item2)
  (and (even? item1) (even? item2)))

(define (same-parity . p-list)
  (let ((first (car p-list)))
    (define (iter n)
      (if (>= n (length p-list))
          (p-list)
          (let ((item (list-ref p-list n)))
            (if (sameParity first item)
                (+ n 1)
                (remove-n p-list n))
            (iter n))))
    (iter 1)))


